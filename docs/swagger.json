{
  "swagger" : "2.0",
  "info" : {
    "description" : "Visquit Backend Server API DOC. Our github url is\n[https://github.com/FallenMapoBridge](https://github.com/FallenMapoBridge)\n",
    "version" : "1.0.0",
    "title" : "Visquit",
    "termsOfService" : "https://github.com/FallenMapoBridge",
    "contact" : {
      "email" : "hsw0194@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/FallenMapoBridge/Visquit/1.0.0",
  "tags" : [ {
    "name" : "store",
    "description" : "Order,store information"
  }, {
    "name" : "menu",
    "description" : "Menu Information"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/store" : {
      "post" : {
        "tags" : [ "store" ],
        "summary" : "새로운 스토어를 등록함.",
        "description" : "가게에 관련된 정보를 가지고 스토어에 등록함. store_id는 auto_increment,user_id는 query에 포함됨.",
        "operationId" : "registerStore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Store 등록에 필요한 정보",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Store"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "가게 주인의 user_id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/store/user" : {
      "post" : {
        "tags" : [ "store" ],
        "summary" : "새로운 가게주인을 등록함.",
        "operationId" : "registerUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "가게주인 정보,user_id는 auto_increment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/store/{sid}/orders" : {
      "get" : {
        "tags" : [ "store" ],
        "summary" : "아직 서빙이 완료되지 않은 주문들을 조회함",
        "description" : "아직 서빙이 완료되지 않은 주문들을 조회함,serve_fl가 0인 item만을 가져옴. date와 time 순서대로 정렬함.",
        "operationId" : "getCurrentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "가게의 id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiOrderResponse"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      }
    },
    "/store/{sid}/orders/history" : {
      "get" : {
        "tags" : [ "store" ],
        "summary" : "가게가 처리한 주문 이력을 가져옴.",
        "description" : "sid를 기반으로 주문이력을 모두 조회함. serve_fl가 1인 item만을 가져옴. 현재 처리하고 있는 주문은 가져오지 않음.order_date와 order_time을 기반으로 순서대로 정렬함.",
        "operationId" : "getOrderHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "가게의 id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/store/{sid}/orders/{oid}" : {
      "patch" : {
        "tags" : [ "store" ],
        "summary" : "특정 가게의 특정 주문을 완료처리함.",
        "description" : "oid를 기반으로 가게의 주문을 조회하고 그 주문을 완료 처리함 (`serve_fl:` `0-> 1`)",
        "operationId" : "updateOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sid",
          "in" : "path",
          "description" : "가게의 id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "oid",
          "in" : "path",
          "description" : "주문의 id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/menu" : {
      "get" : {
        "tags" : [ "menu" ],
        "summary" : "특정 가게의 메뉴를 모두 조회함.",
        "description" : "store_id를 query값으로 전달하면 그 가게에 등록된 모든 메뉴들을 조회함.",
        "operationId" : "getMenus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "store_id",
          "in" : "query",
          "description" : "메뉴를 조회하고 싶은 가게의 store_id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "menu" ],
        "summary" : "메뉴를 생성함.",
        "description" : "특정한 가게에 메뉴를 생성함. 메뉴는 하나씩 등록해야함.",
        "operationId" : "createMenu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "store_id",
          "in" : "query",
          "description" : "메뉴를 만들고 싶은 가게의 store_id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/menu/{menu_id}" : {
      "get" : {
        "tags" : [ "menu" ],
        "summary" : "특정 가게의 특정 메뉴에 대한 상세정보를 조회함.",
        "description" : "store_id를 query값으로,menu_id를 params값으로 그 메뉴에 대한 정보를 조회함",
        "operationId" : "getMenuInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "store_id",
          "in" : "query",
          "description" : "메뉴를 조회하고 싶은 가게의 store_id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "menu_id",
          "in" : "path",
          "description" : "조회하고 싶은 메뉴의 menu_id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "menu" ],
        "summary" : "특정 가게의 특정 메뉴를 수정함.",
        "description" : "store_id를 query값으로,menu_id를 params값으로 그 메뉴에 대한 정보를 수정함.",
        "operationId" : "updateMenu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "store_id",
          "in" : "query",
          "description" : "메뉴를 수정하고 싶은 가게의 store_id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "menu_id",
          "in" : "path",
          "description" : "수정하고 싶은 메뉴의 menu_id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "menu" ],
        "summary" : "특정 가게의 특정 메뉴를 삭제함.",
        "description" : "store_id를 query값으로,menu_id를 params값으로 그 메뉴에 대한 정보를 물리적으로 삭제함",
        "operationId" : "deleteMenu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "store_id",
          "in" : "query",
          "description" : "메뉴를 삭제하고 싶은 가게의 store_id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "menu_id",
          "in" : "path",
          "description" : "삭제하고 싶은 메뉴의 menu_id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Menu" : {
      "type" : "object",
      "properties" : {
        "menu_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "store_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "menu_name" : {
          "type" : "string"
        },
        "menu_price" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "xml" : {
        "name" : "Order"
      }
    },
    "Store" : {
      "type" : "object",
      "properties" : {
        "store_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "store_location" : {
          "type" : "string"
        },
        "store_tel" : {
          "type" : "string"
        },
        "nugu_id" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user_name" : {
          "type" : "string"
        }
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "ApiOrderResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "status" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}